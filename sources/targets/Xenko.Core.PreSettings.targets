<!-- Build file pre-included by all Xenko projects -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Setup this part according to your project if you want your .csproj to compile individually without going through the .sln file -->
  <PropertyGroup>
    <SolutionDir Condition=" '$(SolutionDir)' == '' ">$(MSBuildThisFileDirectory)..\..\build\</SolutionDir>
    <SolutionName Condition=" '$(SolutionName)' == '' ">Xenko</SolutionName>
    <SolutionPath Condition=" '$(SolutionPath)' == '' ">$(SolutionDir)$(SolutionName).sln</SolutionPath>
  </PropertyGroup>

  <!--Import Local Pre Settings for the solution being loaded -->
  <Import Project="$(SolutionDir)$(SolutionName).PreSettings.Local.targets" Condition="Exists('$(SolutionDir)$(SolutionName).PreSettings.Local.targets')" />
  <Import Project="$(SolutionDir)Xenko.Core.PreSettings.Local.targets" Condition="Exists('$(SolutionDir)Xenko.Core.PreSettings.Local.targets')" />
  
    <!-- 
    Settings XenkoPlatform specific
  -->
  <PropertyGroup>
    <XenkoRuntimeTargetFramework>net45</XenkoRuntimeTargetFramework>
    <TargetFrameworkTool>net472</TargetFrameworkTool>
    <TargetFrameworkVersionTool>v4.7.2</TargetFrameworkVersionTool>
    <XenkoPlatformDefines>XENKO_PLATFORM_WINDOWS;XENKO_PLATFORM_WINDOWS_DESKTOP;NET45</XenkoPlatformDefines>

    <!-- Note: ideally we would split using ItemGroup but then PropertyGroup are not properly evaluated if they contain ItemGroup (unless using Targets) -->
    <XenkoPlatforms Condition="'$(XenkoPlatforms)' == ''">Windows</XenkoPlatforms>
    <!-- Let's support escaped MSBuild variables, in case it was sent from Xenko.build (not sure why but I couldn't make it work properly when passing to MSBuild.Properties) -->
    <XenkoPlatforms>$([MSBuild]::Unescape('$(XenkoPlatforms)'))</XenkoPlatforms>
    <_XenkoPlatforms>;$(XenkoPlatforms);</_XenkoPlatforms>
    <!-- Multi-targetting is not fully working :( -->
    <!-- <XenkoRuntimeTargetFrameworks Condition="$(_XenkoPlatforms.Contains(';Windows;'))">$(XenkoRuntimeTargetFrameworks);net45;netstandard2.0</XenkoRuntimeTargetFrameworks> -->
    <XenkoRuntimeTargetFrameworks Condition="$(_XenkoPlatforms.Contains(';Windows;'))">$(XenkoRuntimeTargetFrameworks);netstandard2.0</XenkoRuntimeTargetFrameworks>
    <XenkoRuntimeTargetFrameworks Condition="$(_XenkoPlatforms.Contains(';UWP;'))">$(XenkoRuntimeTargetFrameworks);uap10.0.16299</XenkoRuntimeTargetFrameworks>
    <XenkoRuntimeTargetFrameworks Condition="$(_XenkoPlatforms.Contains(';Android;'))">$(XenkoRuntimeTargetFrameworks);monoandroid50</XenkoRuntimeTargetFrameworks>
    <XenkoRuntimeTargetFrameworks Condition="$(_XenkoPlatforms.Contains(';iOS;'))">$(XenkoRuntimeTargetFrameworks);xamarinios10</XenkoRuntimeTargetFrameworks>
    <XenkoRuntimeTargetFrameworks Condition="$(_XenkoPlatforms.Contains(';Linux;'))">$(XenkoRuntimeTargetFrameworks);netstandard2.0</XenkoRuntimeTargetFrameworks>
    
    <XenkoRuntimeTargetFrameworks>$([MSBuild]::Unescape($(XenkoRuntimeTargetFrameworks.Trim(';'))))</XenkoRuntimeTargetFrameworks>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(XenkoRuntime)' == 'true'">
    <XenkoForceCrossTargeting Condition="$(XenkoRuntimeTargetFrameworks.Contains(';'))">true</XenkoForceCrossTargeting>
    <!-- Should ideally go into non-Core targets (but we currently don't know XenkoPlatforms until PreSettings.Local is included) -->
    <XenkoForceCrossTargeting Condition=" '$(XenkoGraphicsApiDependent)' == 'true' And '$(XenkoGraphicsApiDependentBuildAll)' == 'true' And ('$(XenkoPlatforms)' == 'Windows' Or '$(XenkoPlatforms)' == 'Linux')">true</XenkoForceCrossTargeting>
    
    <TargetFrameworks Condition="'$(XenkoForceCrossTargeting)' == 'true'">$(XenkoRuntimeTargetFrameworks)</TargetFrameworks>
    <TargetFramework Condition="'$(XenkoForceCrossTargeting)' != 'true'">$(XenkoRuntimeTargetFrameworks)</TargetFramework>
    <!-- UpToDate check doesn't work with multi-TFM projects! https://github.com/dotnet/project-system/issues/2487 -->
    <DisableFastUpToDateCheck Condition="'$(XenkoForceCrossTargeting)' == 'true'">true</DisableFastUpToDateCheck>
    <!--<TargetFrameworks>net45;uap10.0.16299;monoandroid50;xamarinios10;netstandard2.0</TargetFrameworks>-->
  </PropertyGroup>

  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <GenerateProjectSpecificOutputFolder>false</GenerateProjectSpecificOutputFolder>

    <!-- Defines the language of the project being compiled CSharp or Cpp - defined by default to CSharp, must be overriden to Cpp in a Cpp project -->
    <XenkoProjectType Condition="'$(XenkoProjectType)' == ''">CSharp</XenkoProjectType>

    <!-- Flag used per-project settings to specify that it should only be compiled on Windows Desktop-->
    <XenkoWindowsOnly Condition="'$(XenkoWindowsOnly)' == ''">false</XenkoWindowsOnly>

    <!-- Default values -->
    <XenkoPlatform Condition=" '$(TargetFramework)' == 'net45' And ('$(RuntimeIdentifer)' == '' Or $(RuntimeIdentifer.StartsWith('win'))) ">Windows</XenkoPlatform>
    <!--WARN: This only supports Portable Linux. All the other variants may not work? -->
    <!--Note these cause problems on Windows. Need a reliable way to detect platform that is not framework dependent!-->
    <!--<XenkoPlatform Condition=" '$(TargetFramework)' == 'net45' And ('$(RuntimeIdentifer)' == '' Or $(RuntimeIdentifer.StartsWith('linux'))) ">Linux</XenkoPlatform>
    <XenkoPlatform Condition=" '$(TargetFramework)' == 'net45' And ('$(RuntimeIdentifer)' == '' Or $(RuntimeIdentifer.StartsWith('osx'))) ">macOS</XenkoPlatform>-->
    <XenkoPlatform Condition=" '$(TargetFramework)' == 'uap10.0' ">UWP</XenkoPlatform>
    <XenkoPlatform Condition=" '$(TargetFramework)' == 'monoandroid50' ">Android</XenkoPlatform>
    <XenkoPlatform Condition=" '$(TargetFramework)' == 'xamarinios10' ">iOS</XenkoPlatform>
    <!-- Default fallback -->
    <XenkoPlatform Condition=" '$(XenkoPlatform)' == '' ">Windows</XenkoPlatform>

    <XenkoPlatformFullName Condition="'$(XenkoPlatformFullName)' == ''">$(XenkoPlatform)</XenkoPlatformFullName>
    
    <XenkoGlobalSettingsTargets Condition="'$(XenkoGlobalSettingsTargets)' == ''">$(MSBuildThisFileDirectory)Xenko.Core.GlobalSettings.targets</XenkoGlobalSettingsTargets>
    <XenkoPostSettingsTargets Condition="'$(XenkoPostSettingsTargets)' == ''">$(MSBuildThisFileDirectory)Xenko.Core.PostSettings.targets</XenkoPostSettingsTargets>
  </PropertyGroup>

  <!-- Ensure appropriate Solution Platform are available -->
  <Choose>
    <When  Condition=" '$(XenkoPlatform)' == 'Android' ">
      <PropertyGroup Condition=" '$(Platform)' == 'Android' "/>
    </When>
    <When  Condition=" '$(XenkoPlatform)' == 'iOS' ">
      <PropertyGroup Condition=" '$(Platform)' == 'iPhone' "/>
      <PropertyGroup Condition=" '$(Platform)' == 'iPhoneSimulator' "/>
    </When>
  </Choose>

  <!--Import Global Settings-->
  <Import Project="$(XenkoGlobalSettingsTargets)"/>
</Project>
